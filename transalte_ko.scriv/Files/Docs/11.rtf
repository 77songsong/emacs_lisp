{\rtf1\ansi\ansicpg949\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 \
@node Narrowing & Widening, car cdr & cons, More Complex, Top\
@comment  node-name,  next,  previous,  up\
@chapter Narrowing and Widening\
@cindex Focusing attention (narrowing)\
@cindex Narrowing\
@cindex Widening\
\
Narrowing is a feature of Emacs that makes it possible for you to focus\
on a specific part of a buffer, and work without accidentally changing\
other parts.  Narrowing is normally disabled since it can confuse\
novices.\
\
@menu\
* Narrowing advantages::        The advantages of narrowing\
* save-restriction::            The @code\{save-restriction\} special form.\
* what-line::                   The number of the line that point is on.\
* narrow Exercise::\
@end menu\
\
@node Narrowing advantages, save-restriction, Narrowing & Widening, Narrowing & Widening\
@ifnottex\
@unnumberedsec The Advantages of Narrowing\
@end ifnottex\
\
With narrowing, the rest of a buffer is made invisible, as if it weren't\
there.  This is an advantage if, for example, you want to replace a word\
in one part of a buffer but not in another: you narrow to the part you want\
and the replacement is carried out only in that section, not in the rest\
of the buffer.  Searches will only work within a narrowed region, not\
outside of one, so if you are fixing a part of a document, you can keep\
yourself from accidentally finding parts you do not need to fix by\
narrowing just to the region you want.\
(The key binding for @code\{narrow-to-region\} is @kbd\{C-x n n\}.)\
\
However, narrowing does make the rest of the buffer invisible, which\
can scare people who inadvertently invoke narrowing and think they\
have deleted a part of their file.  Moreover, the @code\{undo\} command\
(which is usually bound to @kbd\{C-x u\}) does not turn off narrowing\
(nor should it), so people can become quite desperate if they do not\
know that they can return the rest of a buffer to visibility with the\
@code\{widen\} command.\
(The key binding for @code\{widen\} is @kbd\{C-x n w\}.)\
\
Narrowing is just as useful to the Lisp interpreter as to a human.\
Often, an Emacs Lisp function is designed to work on just part of a\
buffer; or conversely, an Emacs Lisp function needs to work on all of a\
buffer that has been narrowed.  The @code\{what-line\} function, for\
example, removes the narrowing from a buffer, if it has any narrowing\
and when it has finished its job, restores the narrowing to what it was.\
On the other hand, the @code\{count-lines\} function, which is called by\
@code\{what-line\}, uses narrowing to restrict itself to just that portion\
of the buffer in which it is interested and then restores the previous\
situation.}