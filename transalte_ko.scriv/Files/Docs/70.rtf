{\rtf1\ansi\ansicpg949\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 \
@node nthcdr, nth, cons, car cdr & cons\
@comment  node-name,  next,  previous,  up\
@section @code\{nthcdr\}\
@findex nthcdr\
\
The @code\{nthcdr\} function is associated with the @code\{cdr\} function.\
What it does is take the @sc\{cdr\} of a list repeatedly.\
\
If you take the @sc\{cdr\} of the list @code\{(pine fir\
oak maple)\}, you will be returned the list @code\{(fir oak maple)\}.  If you\
repeat this on what was returned, you will be returned the list\
@code\{(oak maple)\}.  (Of course, repeated @sc\{cdr\}ing on the original\
list will just give you the original @sc\{cdr\} since the function does\
not change the list.  You need to evaluate the @sc\{cdr\} of the\
@sc\{cdr\} and so on.)  If you continue this, eventually you will be\
returned an empty list, which in this case, instead of being shown as\
@code\{()\} is shown as @code\{nil\}.\
\
@need 1200\
For review, here is a series of repeated @sc\{cdr\}s, the text following\
the @samp\{@result\{\}\} shows what is returned.\
\
@smallexample\
@group\
(cdr '(pine fir oak maple))\
     @result\{\}(fir oak maple)\
@end group\
\
@group\
(cdr '(fir oak maple))\
     @result\{\} (oak maple)\
@end group\
\
@group\
(cdr '(oak maple))\
     @result\{\}(maple)\
@end group\
\
@group\
(cdr '(maple))\
     @result\{\} nil\
@end group\
\
@group\
(cdr 'nil)\
     @result\{\} nil\
@end group\
\
@group\
(cdr ())\
     @result\{\} nil\
@end group\
@end smallexample\
\
@need 1200\
You can also do several @sc\{cdr\}s without printing the values in\
between, like this:\
\
@smallexample\
@group\
(cdr (cdr '(pine fir oak maple)))\
     @result\{\} (oak maple)\
@end group\
@end smallexample\
\
@noindent\
In this example, the Lisp interpreter evaluates the innermost list first.\
The innermost list is quoted, so it just passes the list as it is to the\
innermost @code\{cdr\}.  This @code\{cdr\} passes a list made up of the\
second and subsequent elements of the list to the outermost @code\{cdr\},\
which produces a list composed of the third and subsequent elements of\
the original list.  In this example, the @code\{cdr\} function is repeated\
and returns a list that consists of the original list without its\
first two elements.\
\
The @code\{nthcdr\} function does the same as repeating the call to\
@code\{cdr\}.  In the following example, the argument 2 is passed to the\
function @code\{nthcdr\}, along with the list, and the value returned is\
the list without its first two items, which is exactly the same\
as repeating @code\{cdr\} twice on the list:\
\
@smallexample\
@group\
(nthcdr 2 '(pine fir oak maple))\
     @result\{\} (oak maple)\
@end group\
@end smallexample\
\
@need 1200\
Using the original four element list, we can see what happens when\
various numeric arguments are passed to @code\{nthcdr\}, including 0, 1,\
and 5:\
\
@smallexample\
@group\
;; @r\{Leave the list as it was.\}\
(nthcdr 0 '(pine fir oak maple))\
     @result\{\} (pine fir oak maple)\
@end group\
\
@group\
;; @r\{Return a copy without the first element.\}\
(nthcdr 1 '(pine fir oak maple))\
     @result\{\} (fir oak maple)\
@end group\
\
@group\
;; @r\{Return a copy of the list without three elements.\}\
(nthcdr 3 '(pine fir oak maple))\
     @result\{\} (maple)\
@end group\
\
@group\
;; @r\{Return a copy lacking all four elements.\}\
(nthcdr 4 '(pine fir oak maple))\
     @result\{\} nil\
@end group\
\
@group\
;; @r\{Return a copy lacking all elements.\}\
(nthcdr 5 '(pine fir oak maple))\
     @result\{\} nil\
@end group\
@end smallexample}