{\rtf1\ansi\ansicpg949\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 \
@node Who You Are, Lisp History, On Reading this Text, \'bc\'ad\'b9\'ae\
@comment  node-name,  next,  previous,  up\
@unnumberedsec For Whom This is Written\
\
This text is written as an elementary introduction for people who are\
not programmers.  If you are a programmer, you may not be satisfied with\
this primer.  The reason is that you may have become expert at reading\
reference manuals and be put off by the way this text is organized.\
\
An expert programmer who reviewed this text said to me:\
\
@quotation\
@i\{I prefer to learn from reference manuals.  I ``dive into'' each\
paragraph, and ``come up for air'' between paragraphs.\}\
\
@i\{When I get to the end of a paragraph, I assume that that subject is\
done, finished, that I know everything I need (with the\
possible exception of the case when the next paragraph starts talking\
about it in more detail).  I expect that a well written reference manual\
will not have a lot of redundancy, and that it will have excellent\
pointers to the (one) place where the information I want is.\}\
@end quotation\
\
This introduction is not written for this person!\
\
Firstly, I try to say everything at least three times: first, to\
introduce it; second, to show it in context; and third, to show it in a\
different context, or to review it.\
\
Secondly, I hardly ever put all the information about a subject in one\
place, much less in one paragraph.  To my way of thinking, that imposes\
too heavy a burden on the reader.  Instead I try to explain only what\
you need to know at the time.  (Sometimes I include a little extra\
information so you won't be surprised later when the additional\
information is formally introduced.)\
\
When you read this text, you are not expected to learn everything the\
first time.  Frequently, you need only make, as it were, a `nodding\
acquaintance' with some of the items mentioned.  My hope is that I have\
structured the text and given you enough hints that you will be alert to\
what is important, and concentrate on it.\
\
You will need to ``dive into'' some paragraphs; there is no other way\
to read them.  But I have tried to keep down the number of such\
paragraphs.  This book is intended as an approachable hill, rather than\
as a daunting mountain.\
\
This introduction to @cite\{Programming in Emacs Lisp\} has a companion\
document,\
@iftex\
@cite\{The GNU Emacs Lisp Reference Manual\}.\
@end iftex\
@ifnottex\
@ref\{Top, , The GNU Emacs Lisp Reference Manual, elisp, The GNU\
Emacs Lisp Reference Manual\}.\
@end ifnottex\
The reference manual has more detail than this introduction.  In the\
reference manual, all the information about one topic is concentrated\
in one place.  You should turn to it if you are like the programmer\
quoted above.  And, of course, after you have read this\
@cite\{Introduction\}, you will find the @cite\{Reference Manual\} useful\
when you are writing your own programs.}