{\rtf1\ansi\ansicpg949\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 \
@node Emacs Initialization, Debugging, Readying a Graph, Top\
@chapter Your @file\{.emacs\} File\
@cindex @file\{.emacs\} file\
@cindex Customizing your @file\{.emacs\} file\
@cindex Initialization file\
\
``You don't have to like Emacs to like it'' -- this seemingly\
paradoxical statement is the secret of GNU Emacs.  The plain, `out of\
the box' Emacs is a generic tool.  Most people who use it, customize\
it to suit themselves.\
\
GNU Emacs is mostly written in Emacs Lisp; this means that by writing\
expressions in Emacs Lisp you can change or extend Emacs.\
\
@menu\
* Default Configuration::\
* Site-wide Init::              You can write site-wide init files.\
* defcustom::                   Emacs will write code for you.\
* Beginning a .emacs File::     How to write a @code\{.emacs file\}.\
* Text and Auto-fill::          Automatically wrap lines.\
* Mail Aliases::                Use abbreviations for email addresses.\
* Indent Tabs Mode::            Don't use tabs with @TeX\{\}\
* Keybindings::                 Create some personal keybindings.\
* Keymaps::                     More about key binding.\
* Loading Files::               Load (i.e., evaluate) files automatically.\
* Autoload::                    Make functions available.\
* Simple Extension::            Define a function; bind it to a key.\
* X11 Colors::                  Colors in X.\
* Miscellaneous::\
* Mode Line::                   How to customize your mode line.\
@end menu\
\
@node Default Configuration, Site-wide Init, Emacs Initialization, Emacs Initialization\
@ifnottex\
@unnumberedsec Emacs' Default Configuration\
@end ifnottex\
\
There are those who appreciate Emacs' default configuration.  After\
all, Emacs starts you in C mode when you edit a C file, starts you in\
Fortran mode when you edit a Fortran file, and starts you in\
Fundamental mode when you edit an unadorned file.  This all makes\
sense, if you do not know who is going to use Emacs.  Who knows what a\
person hopes to do with an unadorned file?  Fundamental mode is the\
right default for such a file, just as C mode is the right default for\
editing C code.  (Enough programming languages have syntaxes\
that enable them to share or nearly share features, so C mode is\
now provided by CC mode, the `C Collection'.)\
\
But when you do know who is going to use Emacs---you,\
yourself---then it makes sense to customize Emacs.\
\
For example, I seldom want Fundamental mode when I edit an\
otherwise undistinguished file; I want Text mode.  This is why I\
customize Emacs: so it suits me.\
\
You can customize and extend Emacs by writing or adapting a\
@file\{~/.emacs\} file.  This is your personal initialization file; its\
contents, written in Emacs Lisp, tell Emacs what to do.@footnote\{You\
may also add @file\{.el\} to @file\{~/.emacs\} and call it a\
@file\{~/.emacs.el\} file.  In the past, you were forbidden to type the\
extra keystrokes that the name @file\{~/.emacs.el\} requires, but now\
you may.  The new format is consistent with the Emacs Lisp file\
naming conventions; the old format saves typing.\}\
\
A @file\{~/.emacs\} file contains Emacs Lisp code.  You can write this\
code yourself; or you can use Emacs' @code\{customize\} feature to write\
the code for you.  You can combine your own expressions and\
auto-written Customize expressions in your @file\{.emacs\} file.\
\
(I myself prefer to write my own expressions, except for those,\
particularly fonts, that I find easier to manipulate using the\
@code\{customize\} command.  I combine the two methods.)\
\
Most of this chapter is about writing expressions yourself.  It\
describes a simple @file\{.emacs\} file; for more information, see\
@ref\{Init File, , The Init File, emacs, The GNU Emacs Manual\}, and\
@ref\{Init File, , The Init File, elisp, The GNU Emacs Lisp Reference\
Manual\}.}