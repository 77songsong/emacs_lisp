{\rtf1\ansi\ansicpg949\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 \
@node car cdr & cons, Cutting & Storing Text, Narrowing & Widening, Top\
@comment  node-name,  next,  previous,  up\
@chapter @code\{car\}, @code\{cdr\}, @code\{cons\}: Fundamental Functions\
@findex car, @r\{introduced\}\
@findex cdr, @r\{introduced\}\
\
In Lisp, @code\{car\}, @code\{cdr\}, and @code\{cons\} are fundamental\
functions.  The @code\{cons\} function is used to construct lists, and\
the @code\{car\} and @code\{cdr\} functions are used to take them apart.\
\
In the walk through of the @code\{copy-region-as-kill\} function, we\
will see @code\{cons\} as well as two variants on @code\{cdr\},\
namely, @code\{setcdr\} and @code\{nthcdr\}.  (@xref\{copy-region-as-kill\}.)\
\
@menu\
* Strange Names::               An historical aside: why the strange names?\
* car & cdr::                   Functions for extracting part of a list.\
* cons::                        Constructing a list.\
* nthcdr::                      Calling @code\{cdr\} repeatedly.\
* nth::\
* setcar::                      Changing the first element of a list.\
* setcdr::                      Changing the rest of a list.\
* cons Exercise::\
@end menu\
\
@node Strange Names, car & cdr, car cdr & cons, car cdr & cons\
@ifnottex\
@unnumberedsec Strange Names\
@end ifnottex\
\
The name of the @code\{cons\} function is not unreasonable: it is an\
abbreviation of the word `construct'.  The origins of the names for\
@code\{car\} and @code\{cdr\}, on the other hand, are esoteric: @code\{car\}\
is an acronym from the phrase `Contents of the Address part of the\
Register'; and @code\{cdr\} (pronounced `could-er') is an acronym from\
the phrase `Contents of the Decrement part of the Register'.  These\
phrases refer to specific pieces of hardware on the very early\
computer on which the original Lisp was developed.  Besides being\
obsolete, the phrases have been completely irrelevant for more than 25\
years to anyone thinking about Lisp.  Nonetheless, although a few\
brave scholars have begun to use more reasonable names for these\
functions, the old terms are still in use.  In particular, since the\
terms are used in the Emacs Lisp source code, we will use them in this\
introduction.}