{\rtf1\ansi\ansicpg949\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 \
@node Using setq, Counting, Using set, set & setq\
@comment  node-name,  next,  previous,  up\
@subsection Using @code\{setq\}\
@findex setq\
\
As a practical matter, you almost always quote the first argument to\
@code\{set\}.  The combination of @code\{set\} and a quoted first argument\
is so common that it has its own name: the special form @code\{setq\}.\
This special form is just like @code\{set\} except that the first argument\
is quoted automatically, so you don't need to type the quote mark\
yourself.  Also, as an added convenience, @code\{setq\} permits you to set\
several different variables to different values, all in one expression.\
\
To set the value of the variable @code\{carnivores\} to the list\
@code\{'(lion tiger leopard)\} using @code\{setq\}, the following expression\
is used:\
\
@smallexample\
(setq carnivores '(lion tiger leopard))\
@end smallexample\
\
@noindent\
This is exactly the same as using @code\{set\} except the first argument\
is automatically quoted by @code\{setq\}.  (The @samp\{q\} in @code\{setq\}\
means @code\{quote\}.)\
\
@need 1250\
With @code\{set\}, the expression would look like this:\
\
@smallexample\
(set 'carnivores '(lion tiger leopard))\
@end smallexample\
\
Also, @code\{setq\} can be used to assign different values to\
different variables.  The first argument is bound to the value\
of the second argument, the third argument is bound to the value of the\
fourth argument, and so on.  For example, you could use the following to\
assign a list of trees to the symbol @code\{trees\} and a list of herbivores\
to the symbol @code\{herbivores\}:\
\
@smallexample\
@group\
(setq trees '(pine fir oak maple)\
      herbivores '(gazelle antelope zebra))\
@end group\
@end smallexample\
\
@noindent\
(The expression could just as well have been on one line, but it might\
not have fit on a page; and humans find it easier to read nicely\
formatted lists.)\
\
Although I have been using the term `assign', there is another way of\
thinking about the workings of @code\{set\} and @code\{setq\}; and that is to\
say that @code\{set\} and @code\{setq\} make the symbol @emph\{point\} to the\
list.  This latter way of thinking is very common and in forthcoming\
chapters we shall come upon at least one symbol that has `pointer' as\
part of its name.  The name is chosen because the symbol has a value,\
specifically a list, attached to it; or, expressed another way,\
the symbol is set to ``point'' to the list.}