{\rtf1\ansi\ansicpg949\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 \
@node Loading Files, Autoload, Keymaps, Emacs Initialization\
@section Loading Files\
@cindex Loading files\
@c findex load\
\
Many people in the GNU Emacs community have written extensions to\
Emacs.  As time goes by, these extensions are often included in new\
releases.  For example, the Calendar and Diary packages are now part\
of the standard GNU Emacs, as is Calc.\
\
You can use a @code\{load\} command to evaluate a complete file and\
thereby install all the functions and variables in the file into Emacs.\
For example:\
\
@c (auto-compression-mode t)\
\
@smallexample\
(load "~/emacs/slowsplit")\
@end smallexample\
\
This evaluates, i.e.@: loads, the @file\{slowsplit.el\} file or if it\
exists, the faster, byte compiled @file\{slowsplit.elc\} file from the\
@file\{emacs\} sub-directory of your home directory.  The file contains\
the function @code\{split-window-quietly\}, which John Robinson wrote in\
1989.\
\
The @code\{split-window-quietly\} function splits a window with the\
minimum of redisplay.  I installed it in 1989 because it worked well\
with the slow 1200 baud terminals I was then using.  Nowadays, I only\
occasionally come across such a slow connection, but I continue to use\
the function because I like the way it leaves the bottom half of a\
buffer in the lower of the new windows and the top half in the upper\
window.\
\
@need 1250\
To replace the key binding for the default\
@code\{split-window-vertically\}, you must also unset that key and bind\
the keys to @code\{split-window-quietly\}, like this:\
\
@smallexample\
@group\
(global-unset-key "\\C-x2")\
(global-set-key "\\C-x2" 'split-window-quietly)\
@end group\
@end smallexample\
\
@vindex load-path\
If you load many extensions, as I do, then instead of specifying the\
exact location of the extension file, as shown above, you can specify\
that directory as part of Emacs' @code\{load-path\}.  Then, when Emacs\
loads a file, it will search that directory as well as its default\
list of directories.  (The default list is specified in @file\{paths.h\}\
when Emacs is built.)\
\
@need 1250\
The following command adds your @file\{~/emacs\} directory to the\
existing load path:\
\
@smallexample\
@group\
;;; Emacs Load Path\
(setq load-path (cons "~/emacs" load-path))\
@end group\
@end smallexample\
\
Incidentally, @code\{load-library\} is an interactive interface to the\
@code\{load\} function.  The complete function looks like this:\
\
@findex load-library\
@smallexample\
@group\
(defun load-library (library)\
  "Load the library named LIBRARY.\
This is an interface to the function `load'."\
  (interactive\
   (list (completing-read "Load library: "\
			  (apply-partially 'locate-file-completion-table\
                                           load-path\
                                           (get-load-suffixes)))))\
  (load library))\
@end group\
@end smallexample\
\
The name of the function, @code\{load-library\}, comes from the use of\
`library' as a conventional synonym for `file'.  The source for the\
@code\{load-library\} command is in the @file\{files.el\} library.\
\
Another interactive command that does a slightly different job is\
@code\{load-file\}.  @xref\{Lisp Libraries, , Libraries of Lisp Code for\
Emacs, emacs, The GNU Emacs Manual\}, for information on the\
distinction between @code\{load-library\} and this command.}