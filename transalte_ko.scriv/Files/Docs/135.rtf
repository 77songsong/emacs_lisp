{\rtf1\ansi\ansicpg949\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 \
@node On Reading this Text, Who You Are, \'bf\'d6, \'bc\'ad\'b9\'ae\
@comment  node-name,  next,  previous,  up\
@unnumberedsec On Reading this Text\
\
All through this document, you will see little sample programs you can\
run inside of Emacs.  If you read this document in Info inside of GNU\
Emacs, you can run the programs as they appear.  (This is easy to do and\
is explained when the examples are presented.)  Alternatively, you can\
read this introduction as a printed book while sitting beside a computer\
running Emacs.  (This is what I like to do; I like printed books.)  If\
you don't have a running Emacs beside you, you can still read this book,\
but in this case, it is best to treat it as a novel or as a travel guide\
to a country not yet visited: interesting, but not the same as being\
there.\
\
Much of this introduction is dedicated to walk-throughs or guided tours\
of code used in GNU Emacs.  These tours are designed for two purposes:\
first, to give you familiarity with real, working code (code you use\
every day); and, second, to give you familiarity with the way Emacs\
works.  It is interesting to see how a working environment is\
implemented.\
Also, I\
hope that you will pick up the habit of browsing through source code.\
You can learn from it and mine it for ideas.  Having GNU Emacs is like\
having a dragon's cave of treasures.\
\
In addition to learning about Emacs as an editor and Emacs Lisp as a\
programming language, the examples and guided tours will give you an\
opportunity to get acquainted with Emacs as a Lisp programming\
environment.  GNU Emacs supports programming and provides tools that\
you will want to become comfortable using, such as @kbd\{M-.\} (the key\
which invokes the @code\{find-tag\} command).  You will also learn about\
buffers and other objects that are part of the environment.\
Learning about these features of Emacs is like learning new routes\
around your home town.\
\
@ignore\
In addition, I have written several programs as extended examples.\
Although these are examples, the programs are real.  I use them.\
Other people use them.  You may use them.  Beyond the fragments of\
programs used for illustrations, there is very little in here that is\
`just for teaching purposes'; what you see is used.  This is a great\
advantage of Emacs Lisp: it is easy to learn to use it for work.\
@end ignore\
\
Finally, I hope to convey some of the skills for using Emacs to\
learn aspects of programming that you don't know.  You can often use\
Emacs to help you understand what puzzles you or to find out how to do\
something new.  This self-reliance is not only a pleasure, but an\
advantage.}