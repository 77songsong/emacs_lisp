{\rtf1\ansi\ansicpg949\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 \
@node Summary, Error Message Exercises, set & setq, List Processing\
@comment  node-name,  next,  previous,  up\
@section Summary\
\
Learning Lisp is like climbing a hill in which the first part is the\
steepest.  You have now climbed the most difficult part; what remains\
becomes easier as you progress onwards.\
\
@need 1000\
In summary,\
\
@itemize @bullet\
\
@item\
Lisp programs are made up of expressions, which are lists or single atoms.\
\
@item\
Lists are made up of zero or more atoms or inner lists, separated by whitespace and\
surrounded by parentheses.  A list can be empty.\
\
@item\
Atoms are multi-character symbols, like @code\{forward-paragraph\}, single\
character symbols like @code\{+\}, strings of characters between double\
quotation marks, or numbers.\
\
@item\
A number evaluates to itself.\
\
@item\
A string between double quotes also evaluates to itself.\
\
@item\
When you evaluate a symbol by itself, its value is returned.\
\
@item\
When you evaluate a list, the Lisp interpreter looks at the first symbol\
in the list and then at the function definition bound to that symbol.\
Then the instructions in the function definition are carried out.\
\
@item\
A single quotation mark,\
@ifinfo\
'\
@end ifinfo\
@ifnotinfo\
@code\{'\}\
@end ifnotinfo\
, tells the Lisp interpreter that it should\
return the following expression as written, and not evaluate it as it\
would if the quote were not there.\
\
@item\
Arguments are the information passed to a function.  The arguments to a\
function are computed by evaluating the rest of the elements of the list\
of which the function is the first element.\
\
@item\
A function always returns a value when it is evaluated (unless it gets\
an error); in addition, it may also carry out some action called a\
``side effect''.  In many cases, a function's primary purpose is to\
create a side effect.\
@end itemize}