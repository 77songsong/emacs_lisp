{\rtf1\ansi\ansicpg949\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 \
@node Buffer Size & Locations, Evaluation Exercise, Switching Buffers, \'c6\'f2\'b0\'a1 \'bf\'ac\'bd\'c0\'c7\'cf\'b1\'e2\
@comment  node-name,  next,  previous,  up\
@section Buffer Size and the Location of Point\
@cindex Size of buffer\
@cindex Buffer size\
@cindex Point location\
@cindex Location of point\
\
Finally, let's look at several rather simple functions,\
@code\{buffer-size\}, @code\{point\}, @code\{point-min\}, and\
@code\{point-max\}.  These give information about the size of a buffer and\
the location of point within it.\
\
The function @code\{buffer-size\} tells you the size of the current\
buffer; that is, the function returns a count of the number of\
characters in the buffer.\
\
@smallexample\
(buffer-size)\
@end smallexample\
\
@noindent\
You can evaluate this in the usual way, by positioning the\
cursor after the expression and typing @kbd\{C-x C-e\}.\
\
@cindex @samp\{point\} defined\
In Emacs, the current  position of the cursor is called @dfn\{point\}.\
The expression @code\{(point)\} returns a number that tells you where the\
cursor is located as a count of the number of characters from the\
beginning of the buffer up to point.\
\
@need 1250\
You can see the character count for point in this buffer by evaluating\
the following expression in the usual way:\
\
@smallexample\
(point)\
@end smallexample\
\
@noindent\
As I write this, the value of @code\{point\} is 65724.  The @code\{point\}\
function is frequently used in some of the examples later in this\
book.\
\
@need 1250\
The value of point depends, of course, on its location within the\
buffer.  If you evaluate point in this spot, the number will be larger:\
\
@smallexample\
(point)\
@end smallexample\
\
@noindent\
For me, the value of point in this location is 66043, which means that\
there are 319 characters (including spaces) between the two\
expressions.  (Doubtless, you will see different numbers, since I will\
have edited this since I first evaluated point.)\
\
@cindex @samp\{narrowing\} defined\
The function @code\{point-min\} is somewhat similar to @code\{point\}, but\
it returns the value of the minimum permissible value of point in the\
current buffer.  This is the number 1 unless @dfn\{narrowing\} is in\
effect.  (Narrowing is a mechanism whereby you can restrict yourself,\
or a program, to operations on just a part of a buffer.\
@xref\{Narrowing & Widening, , Narrowing and Widening\}.)  Likewise, the\
function @code\{point-max\} returns the value of the maximum permissible\
value of point in the current buffer.}