{\rtf1\ansi\ansicpg949\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 \
@node message,  , Wrong Type of Argument, Arguments\
@comment  node-name,  next,  previous,  up\
@subsection The @code\{message\} Function\
@findex message\
\
Like @code\{+\}, the @code\{message\} function takes a variable number of\
arguments.  It is used to send messages to the user and is so useful\
that we will describe it here.\
\
@need 1250\
A message is printed in the echo area.  For example, you can print a\
message in your echo area by evaluating the following list:\
\
@smallexample\
(message "This message appears in the echo area!")\
@end smallexample\
\
The whole string between double quotation marks is a single argument\
and is printed @i\{in toto\}.  (Note that in this example, the message\
itself will appear in the echo area within double quotes; that is\
because you see the value returned by the @code\{message\} function.  In\
most uses of @code\{message\} in programs that you write, the text will\
be printed in the echo area as a side-effect, without the quotes.\
@xref\{multiply-by-seven in detail, , @code\{multiply-by-seven\} in\
detail\}, for an example of this.)\
\
However, if there is a @samp\{%s\} in the quoted string of characters, the\
@code\{message\} function does not print the @samp\{%s\} as such, but looks\
to the argument that follows the string.  It evaluates the second\
argument and prints the value at the location in the string where the\
@samp\{%s\} is.\
\
@need 1250\
You can see this by positioning the cursor after the following\
expression and typing @kbd\{C-x C-e\}:\
\
@smallexample\
(message "The name of this buffer is: %s." (buffer-name))\
@end smallexample\
\
@noindent\
In Info, @code\{"The name of this buffer is: *info*."\} will appear in the\
echo area.  The function @code\{buffer-name\} returns the name of the\
buffer as a string, which the @code\{message\} function inserts in place\
of @code\{%s\}.\
\
To print a value as an integer, use @samp\{%d\} in the same way as\
@samp\{%s\}.  For example, to print a message in the echo area that\
states the value of the @code\{fill-column\}, evaluate the following:\
\
@smallexample\
(message "The value of fill-column is %d." fill-column)\
@end smallexample\
\
@noindent\
On my system, when I evaluate this list, @code\{"The value of\
fill-column is 72."\} appears in my echo area@footnote\{Actually, you\
can use @code\{%s\} to print a number.  It is non-specific.  @code\{%d\}\
prints only the part of a number left of a decimal point, and not\
anything that is not a number.\}.\
\
If there is more than one @samp\{%s\} in the quoted string, the value of\
the first argument following the quoted string is printed at the\
location of the first @samp\{%s\} and the value of the second argument is\
printed at the location of the second @samp\{%s\}, and so on.\
\
@need 1250\
For example, if you evaluate the following,\
\
@smallexample\
@group\
(message "There are %d %s in the office!"\
         (- fill-column 14) "pink elephants")\
@end group\
@end smallexample\
\
@noindent\
a rather whimsical message will appear in your echo area.  On my system\
it says, @code\{"There are 58 pink elephants in the office!"\}.\
\
The expression @code\{(- fill-column 14)\} is evaluated and the resulting\
number is inserted in place of the @samp\{%d\}; and the string in double\
quotes, @code\{"pink elephants"\}, is treated as a single argument and\
inserted in place of the @samp\{%s\}.  (That is to say, a string between\
double quotes evaluates to itself, like a number.)\
\
Finally, here is a somewhat complex example that not only illustrates\
the computation of a number, but also shows how you can use an\
expression within an expression to generate the text that is substituted\
for @samp\{%s\}:\
\
@smallexample\
@group\
(message "He saw %d %s"\
         (- fill-column 32)\
         (concat "red "\
                 (substring\
                  "The quick brown foxes jumped." 16 21)\
                 " leaping."))\
@end group\
@end smallexample\
\
In this example, @code\{message\} has three arguments: the string,\
@code\{"He saw %d %s"\}, the expression, @code\{(- fill-column 32)\}, and\
the expression beginning with the function @code\{concat\}.  The value\
resulting from the evaluation of @code\{(- fill-column 32)\} is inserted\
in place of the @samp\{%d\}; and the value returned by the expression\
beginning with @code\{concat\} is inserted in place of the @samp\{%s\}.\
\
When your fill column is 70 and you evaluate the expression, the\
message @code\{"He saw 38 red foxes leaping."\} appears in your echo\
area.}